// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Log log
// swagger:model Log
type Log struct {

	// content
	// Read Only: true
	Content string `json:"content,omitempty"`

	// description
	// Read Only: true
	Description string `json:"description,omitempty"`

	// display name
	// Read Only: true
	DisplayName string `json:"displayName,omitempty"`

	// external info
	// Read Only: true
	ExternalInfo string `json:"externalInfo,omitempty"`

	// id
	// Read Only: true
	ID string `json:"id,omitempty"`

	// last modified
	// Read Only: true
	// Format: date-time
	LastModified strfmt.DateTime `json:"lastModified,omitempty"`

	// size
	// Read Only: true
	Size int64 `json:"size,omitempty"`
}

// Validate validates this log
func (m *Log) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLastModified(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Log) validateLastModified(formats strfmt.Registry) error {

	if swag.IsZero(m.LastModified) { // not required
		return nil
	}

	if err := validate.FormatOf("lastModified", "body", "date-time", m.LastModified.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *Log) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Log) UnmarshalBinary(b []byte) error {
	var res Log
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
